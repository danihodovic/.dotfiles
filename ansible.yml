---
# yamllint disable rule:line-length
# yamllint disable rule:commas
# yamllint disable rule:braces
- hosts: localhost
  vars:
    symlink_dir: '{{ playbook_dir }}/conf'

  roles:
    - role: docker
      become: true
      vars:
        docker_install_compose: false
      tags: docker

    - role: taskwarrior
      tags: taskwarrior
  tasks:
    - name: Install fetch
      import_role: name=fetch
      tags: fetch

    - name: Set nopasswd
      tags: nopasswd
      become: true
      blockinfile:
        path: /etc/sudoers
        block: dani ALL=(ALL) NOPASSWD:ALL

    - name: Install git
      import_role: name=git
      tags: git

    - name: Install gotask
      import_role: name=gotask
      tags: gotask

    - name: Install xbright
      import_role: name=xbright
      tags: xbright

    - name: Install github-release
      import_role: name=github_release
      tags: github-release

    - name: Install monitoring
      import_role: name=monitoring
      tags: monitoring

    - name: Install and configure imagemagick
      import_role: name=imagemagick
      tags: imagemagick

    - name: Install apt packages
      tags: apt
      become: true
      apt:
        name:
          - syncthing
          - gnupg2
          - pinentry-curses
          - htop
          - zsh
          - git
          - httpie
          - curl
          - openvpn
          - net-tools
          - parcellite
          - ripgrep
          - xclip
          - jq
          - git-extras
          - sshfs
          - cmake
          - python-dev
          - build-essential
          - xdotool
          - wmctrl
          - colortest
          - vnstat
          - gparted
          - shellcheck
          - rofi
          - ranger
          - gnome-settings-daemon
          - apt-file
          - direnv
          - xautolock
          - caffeine
          - asciinema
          - network-manager-openvpn-gnome
          - feh
          - speedtest-cli
          - i3lock
          - ruby-dev
          - libnotify-bin
          - yamllint
          - ncdu
          - inotify-tools
          - flameshot
          - lua5.3
          - libpq-dev
          - scrot
          - libjpeg8-dev  # required by python pillow
          - cloc
          - patchelf
          - hcloud-cli

    - name: Install snap packages
      become: true
      tags: helm
      community.general.snap:
        name:
          - helm
        classic: true

    - name: Install system firmware
      tags: [firmware, system]
      import_role:
        name: system

    # It ships by default with i3 and overrides xfce-notifyd. It's also not
    # possible to easily kill like xfce4-nofiyd is, so the notificaiton is long
    # running
    - name: Remove dunst
      become: true
      apt:
        name: dunst
        state: absent

    - name: Install pip packages
      tags: pip
      pip:
        executable: /home/dani/.pyenv/shims/pip
        name:
          - docker-compose
          - awscli
        state: latest
        extra_args: --user

    - name: Install ruby gems
      gem:
        name: '{{ item }}'
        user_install: true
      with_items:
        - travis
        - gist

    - import_role: name=tmux
      tags: tmux

    - import_role: name=activitywatch
      tags: activitywatch

    - import_role: name=neovim
      tags: neovim

    - import_role: name=fzf
      tags: fzf

    - import_role: name=fd
      tags: fd

    - import_role: name=bat
      tags: bat

    - import_role: name=n
      tags: n

    - import_role: name=duf
      tags: duf

    - import_role: name=dust
      tags: dust

    - import_role: name=chrome
      tags: chrome

    - name: antibody
      import_role:
        name: antibody
      tags: antibody

    - import_role: name=i3_gaps
      tags: [i3_gaps, i3-gaps]

    - import_role: name=polybar
      tags: polybar

    - import_role: name=doctl
      tags: doctl

    - name: hadolint
      import_role:
        name: hadolint
      tags: hadolint

    - import_role: name=terraform
      tags: terraform

    - import_role: name=packer
      tags: packer

    - import_role: name=gcloud
      tags: gcloud

    - import_role: name=hub
      tags: hub

    - import_role: name=ngrok
      tags: ngrok

    - import_role: name=drone
      tags: drone

    - import_role: name=tflint
      tags: tflint

    - import_role: name=nordvpn
      tags: nordvpn

    - import_role: name=enpass
      tags: enpass

    - import_role: name=firefox
      tags: firefox

    - import_role: name=tldr
      tags: tldr

    - import_role: name=alacritty
      tags: alacritty

    - import_role: name=navi
      tags: navi

    - import_role: name=dht
      tags: dht

    - import_role: name=stripe
      tags: stripe

    - import_role: name=jsonnet
      tags: jsonnet

    - import_role: name=kubectx
      tags: kubectx

    - import_role: name=k9s
      tags: k9s

    - import_role: name=age
      tags: age

    - import_role: name=rclone
      tags: rclone

    - name: Install tanka and jsonnet bundler
      import_role: name=tanka
      tags: tanka

    - name: Install hcloud
      import_role: name=hcloud
      tags: hcloud

    - name: Install k3s
      import_role: name=k3s
      tags: k3s

    - name: Create symlink parent directories
      tags: symlinks
      file:
        path: '{{ item }}'
        state: directory
      with_items:
        - '{{ ansible_env.HOME }}/.config/nvim'
        - '{{ ansible_env.HOME }}/.config/git'
        - '{{ ansible_env.HOME }}/.config/asciinema'
        - '{{ ansible_env.HOME }}/.config/pudb'
        - '{{ ansible_env.HOME }}/.i3'
        - '{{ ansible_env.HOME }}/.ptpython'
        - '{{ ansible_env.HOME }}/.config/ptpython'
        - '{{ ansible_env.HOME }}/.config/pypoetry/'
        - '{{ ansible_env.HOME }}/.config/i3blocks/'
        - '{{ ansible_env.HOME }}/.gnupg'

    - name: Symlink config files
      tags: symlinks
      file:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        state: link
        force: true
      with_items:
        - { src: '{{ symlink_dir }}/profile',          dest: '{{ ansible_env.HOME }}/.profile' }
        - { src: '{{ symlink_dir }}/inputrc',          dest: '{{ ansible_env.HOME }}/.inputrc' }
        - { src: '{{ symlink_dir }}/tmux.conf',        dest: '{{ ansible_env.HOME }}/.tmux.conf' }
        - { src: '{{ symlink_dir }}/sqliterc',         dest: '{{ ansible_env.HOME }}/.sqliterc' }
        - { src: '{{ symlink_dir }}/pylintrc',         dest: '{{ ansible_env.HOME }}/.pylintrc' }
        - { src: '{{ symlink_dir }}/pythonrc',         dest: '{{ ansible_env.HOME }}/.pythonrc' }
        - { src: '{{ symlink_dir }}/tern-config',      dest: '{{ ansible_env.HOME }}/.tern-config' }
        - { src: '{{ symlink_dir }}/agignore',         dest: '{{ ansible_env.HOME }}/.agignore' }
        - { src: '{{ symlink_dir }}/gitconfig',        dest: '{{ ansible_env.HOME }}/.gitconfig' }
        - { src: '{{ symlink_dir }}/global-gitignore', dest: '{{ ansible_env.HOME }}/.config/git/ignore' }
        - { src: '{{ symlink_dir }}/i3-config',        dest: '{{ ansible_env.HOME }}/.i3/config' }
        - { src: '{{ symlink_dir }}/Xresources',       dest: '{{ ansible_env.HOME }}/.Xresources' }
        - { src: '{{ symlink_dir }}/ginit.vim',        dest: '{{ ansible_env.HOME }}/.config/nvim/ginit.vim' }
        - { src: '{{ symlink_dir }}/zlogin',           dest: '{{ ansible_env.HOME }}/.zlogin' }
        - { src: '{{ symlink_dir }}/cvsignore',        dest: '{{ ansible_env.HOME }}/.cvsignore' }
        - { src: '{{ symlink_dir }}/asciinema-config', dest: '{{ ansible_env.HOME }}/.config/asciinema/config' }
        - { src: '{{ symlink_dir }}/taskrc',           dest: '{{ ansible_env.HOME }}/.taskrc' }
        - { src: '{{ symlink_dir }}/vitrc',            dest: '{{ ansible_env.HOME }}/.vitrc' }
        - { src: '{{ symlink_dir }}/ptpython_config.py', dest: '{{ ansible_env.HOME }}/.config/ptpython/config.py' }
        - { src: '{{ symlink_dir }}/ptpython_config.py', dest: '{{ ansible_env.HOME }}/.ptpython/config.py' }
        - { src: '{{ symlink_dir }}/lazygit.yml', dest: '{{ ansible_env.HOME }}/.config/lazygit/config.yml' }
        - { src: '{{ symlink_dir }}/pudb.cfg',         dest: '{{ ansible_env.HOME }}/.config/pudb/pudb.cfg' }
        - { src: '{{ symlink_dir }}/i3blocks-config',  dest: '{{ ansible_env.HOME }}/.config/i3blocks/config' }
        - { src: '{{ symlink_dir }}/gpg-agent.conf',   dest: '{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf' }
        - { src: '{{ symlink_dir }}/cookiecutterrc',   dest: '{{ ansible_env.HOME }}/.cookiecutterrc' }
        - { src: '{{ symlink_dir }}/poetry.toml',      dest: '{{ ansible_env.HOME }}/.config/pypoetry/config.toml' }
        - { src: '{{ playbook_dir }}/zshrc',           dest: '{{ ansible_env.HOME }}/.zshrc' }
        - { src: '{{ playbook_dir }}/bashrc',          dest: '{{ ansible_env.HOME }}/.bashrc' }

    - name: Set locales
      become: true
      shell: 'update-locale {{ item }}'
      tags: set-locale
      with_items:
        - LANG=en_US.UTF-8
        - LANGUAGE=en_US
        - LC_CTYPE="en_US.UTF-8"
        - LC_NUMERIC=en_US.UTF-8
        - LC_TIME=en_US.UTF-8
        - LC_COLLATE="en_US.UTF-8"
        - LC_MONETARY=en_US.UTF-8
        - LC_MESSAGES="en_US.UTF-8"
        - LC_PAPER=en_US.UTF-8
        - LC_NAME=en_US.UTF-8
        - LC_ADDRESS=en_US.UTF-8
        - LC_TELEPHONE=en_US.UTF-8
        - LC_MEASUREMENT=en_US.UTF-8
        - LC_IDENTIFICATION=en_US.UTF-8

    - name: Use zsh
      become: true
      tags: use-zsh
      user:
        name: '{{ item }}'
        shell: /bin/zsh
      loop:
        - root
        - dani

    - name: Set the default folder opener
      shell: xdg-mime default pcmanfm.desktop inode/directory
      when: lookup('pipe', 'xdg-mime query default inode/directory') != 'pcmanfm.desktop'
      tags: [set-default-file-opener, xdg]

    - name: Set default browser
      shell: xdg-settings set default-web-browser firefox.desktop
      when: lookup('pipe', 'xdg-settings get default-web-browser') != 'firefox.desktop'
      tags: [set-default-browser, xdg]

    - name: Allow inotifywait to use more watches
      shell: echo 30000 | sudo tee /proc/sys/fs/inotify/max_user_watches
